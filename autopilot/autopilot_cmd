#!/bin/sh
# autopilot_cmd - a skeleton command handler for autopilot settings and channels
#
# Usage:
#   autopilot_cmd get <parameter>
#   autopilot_cmd set <parameter> <value>
#   autopilot_cmd statustext <parameter>
#   autopilot_cmd <channel> <value>
#
# Replace the echo commands below with the actual system calls or logic.

if [ "$1" = "get" ]; then
    case "$2" in
        VTX_POWER)
            # Retrieve VTX_POWER (example)
            echo "OK 20"
            ;;
        VIDEO_CH)
            echo "OK 1"
            ;;
        VIDEO_BR)
            echo "OK 5000"
            ;;
        VTX_PROFILE)
            echo "OK 0"
            ;;
        *)
            echo "ERROR Unknown parameter"
            ;;
    esac
elif [ "$1" = "set" ]; then
    case "$2" in
        VTX_POWER)
            # Set VTX_POWER to $3 (example)
            echo "OK $3"
            ;;
        VIDEO_CH)
            echo "OK $3"
            ;;
        VIDEO_BR)
            echo "OK $3"
            ;;
        VTX_PROFILE)
            echo "OK $3"
            ;;
        *)
            echo "ERROR Unknown parameter"
            ;;
    esac
elif [ "$1" = "statustext" ]; then
    # Handle the statustext command
    case "$2" in
        # Add cases for known parameters that require a status text response.
        # Replace PARAM1 with an actual parameter name.
        PARAM1)
            echo "OK Status text for PARAM1: All systems nominal"
            ;;
        # You can add more parameters as needed.
        *)
            echo "ERROR Unknown parameter"
            ;;
    esac
else
    # Assume first argument is a channel number, second is the value.
    CHANNEL="$1"
    VALUE="$2"
    # Insert your command to process channel changes here.
    # For example, update hardware PWM, etc.
    echo "OK Channel $CHANNEL set to $VALUE"
fi
